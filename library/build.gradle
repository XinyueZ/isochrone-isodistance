apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion rootProject.compile_sdk_version
    defaultConfig {
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode rootProject.version_code
        versionName rootProject.version_name

        testInstrumentationRunner rootProject.test_instrumentation_runner
        multiDexEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        warningsAsErrors true
    }
}


dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api "com.google.android.gms:play-services-maps:${play_service}"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${play_service}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutine}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutine}"

    api "com.google.code.gson:gson:${gson}"

    api "com.squareup.retrofit2:retrofit:${retrofit}"
    api "com.squareup.retrofit2:converter-gson:${retrofit}"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:${retrofit_coroutine}"

    api "com.github.grapesnberries:curlloggerinterceptor:${curl}"

    // unit testing
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-inline:$mockito_inline"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin"
    testImplementation "org.assertj:assertj-core:$assertj_core"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlin_test"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}